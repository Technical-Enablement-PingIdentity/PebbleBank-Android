// Generated by view binder compiler. Do not edit!
package org.forgerock.pebblebank.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.forgerock.pebblebank.R;

public final class FragmentTransactionSigningBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView amount;

  @NonNull
  public final Button approve;

  @NonNull
  public final TextView currency;

  @NonNull
  public final TextView fromAccount;

  @NonNull
  public final Button reject;

  @NonNull
  public final TextView textView10;

  @NonNull
  public final TextView textView18;

  @NonNull
  public final TextView textView19;

  @NonNull
  public final TextView textView20;

  @NonNull
  public final TextView toAccount;

  @NonNull
  public final ConstraintLayout transactionSigning;

  private FragmentTransactionSigningBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView amount, @NonNull Button approve, @NonNull TextView currency,
      @NonNull TextView fromAccount, @NonNull Button reject, @NonNull TextView textView10,
      @NonNull TextView textView18, @NonNull TextView textView19, @NonNull TextView textView20,
      @NonNull TextView toAccount, @NonNull ConstraintLayout transactionSigning) {
    this.rootView = rootView;
    this.amount = amount;
    this.approve = approve;
    this.currency = currency;
    this.fromAccount = fromAccount;
    this.reject = reject;
    this.textView10 = textView10;
    this.textView18 = textView18;
    this.textView19 = textView19;
    this.textView20 = textView20;
    this.toAccount = toAccount;
    this.transactionSigning = transactionSigning;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTransactionSigningBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTransactionSigningBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_transaction_signing, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTransactionSigningBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.amount;
      TextView amount = ViewBindings.findChildViewById(rootView, id);
      if (amount == null) {
        break missingId;
      }

      id = R.id.approve;
      Button approve = ViewBindings.findChildViewById(rootView, id);
      if (approve == null) {
        break missingId;
      }

      id = R.id.currency;
      TextView currency = ViewBindings.findChildViewById(rootView, id);
      if (currency == null) {
        break missingId;
      }

      id = R.id.fromAccount;
      TextView fromAccount = ViewBindings.findChildViewById(rootView, id);
      if (fromAccount == null) {
        break missingId;
      }

      id = R.id.reject;
      Button reject = ViewBindings.findChildViewById(rootView, id);
      if (reject == null) {
        break missingId;
      }

      id = R.id.textView10;
      TextView textView10 = ViewBindings.findChildViewById(rootView, id);
      if (textView10 == null) {
        break missingId;
      }

      id = R.id.textView18;
      TextView textView18 = ViewBindings.findChildViewById(rootView, id);
      if (textView18 == null) {
        break missingId;
      }

      id = R.id.textView19;
      TextView textView19 = ViewBindings.findChildViewById(rootView, id);
      if (textView19 == null) {
        break missingId;
      }

      id = R.id.textView20;
      TextView textView20 = ViewBindings.findChildViewById(rootView, id);
      if (textView20 == null) {
        break missingId;
      }

      id = R.id.toAccount;
      TextView toAccount = ViewBindings.findChildViewById(rootView, id);
      if (toAccount == null) {
        break missingId;
      }

      ConstraintLayout transactionSigning = (ConstraintLayout) rootView;

      return new FragmentTransactionSigningBinding((ConstraintLayout) rootView, amount, approve,
          currency, fromAccount, reject, textView10, textView18, textView19, textView20, toAccount,
          transactionSigning);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
