// Generated by view binder compiler. Do not edit!
package org.forgerock.pebblebank.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.forgerock.pebblebank.R;

public final class ActivityPushNotificationBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout acceptButtons;

  @NonNull
  public final TextView accountName;

  @NonNull
  public final LinearLayout challengeButtons;

  @NonNull
  public final Button choice1;

  @NonNull
  public final Button choice2;

  @NonNull
  public final Button choice3;

  @NonNull
  public final TextView geoLocation;

  @NonNull
  public final ImageView image;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final TextView issuer;

  @NonNull
  public final LinearLayout locationLayout;

  @NonNull
  public final TextView message;

  @NonNull
  public final Button pushApprove;

  @NonNull
  public final Button pushChallengeDeny;

  @NonNull
  public final Button pushDeny;

  @NonNull
  public final TextView question;

  @NonNull
  public final LinearLayout rejectChallengeButton;

  private ActivityPushNotificationBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout acceptButtons, @NonNull TextView accountName,
      @NonNull LinearLayout challengeButtons, @NonNull Button choice1, @NonNull Button choice2,
      @NonNull Button choice3, @NonNull TextView geoLocation, @NonNull ImageView image,
      @NonNull ImageView imageView, @NonNull TextView issuer, @NonNull LinearLayout locationLayout,
      @NonNull TextView message, @NonNull Button pushApprove, @NonNull Button pushChallengeDeny,
      @NonNull Button pushDeny, @NonNull TextView question,
      @NonNull LinearLayout rejectChallengeButton) {
    this.rootView = rootView;
    this.acceptButtons = acceptButtons;
    this.accountName = accountName;
    this.challengeButtons = challengeButtons;
    this.choice1 = choice1;
    this.choice2 = choice2;
    this.choice3 = choice3;
    this.geoLocation = geoLocation;
    this.image = image;
    this.imageView = imageView;
    this.issuer = issuer;
    this.locationLayout = locationLayout;
    this.message = message;
    this.pushApprove = pushApprove;
    this.pushChallengeDeny = pushChallengeDeny;
    this.pushDeny = pushDeny;
    this.question = question;
    this.rejectChallengeButton = rejectChallengeButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPushNotificationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPushNotificationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_push_notification, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPushNotificationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.acceptButtons;
      LinearLayout acceptButtons = ViewBindings.findChildViewById(rootView, id);
      if (acceptButtons == null) {
        break missingId;
      }

      id = R.id.accountName;
      TextView accountName = ViewBindings.findChildViewById(rootView, id);
      if (accountName == null) {
        break missingId;
      }

      id = R.id.challengeButtons;
      LinearLayout challengeButtons = ViewBindings.findChildViewById(rootView, id);
      if (challengeButtons == null) {
        break missingId;
      }

      id = R.id.choice1;
      Button choice1 = ViewBindings.findChildViewById(rootView, id);
      if (choice1 == null) {
        break missingId;
      }

      id = R.id.choice2;
      Button choice2 = ViewBindings.findChildViewById(rootView, id);
      if (choice2 == null) {
        break missingId;
      }

      id = R.id.choice3;
      Button choice3 = ViewBindings.findChildViewById(rootView, id);
      if (choice3 == null) {
        break missingId;
      }

      id = R.id.geoLocation;
      TextView geoLocation = ViewBindings.findChildViewById(rootView, id);
      if (geoLocation == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.issuer;
      TextView issuer = ViewBindings.findChildViewById(rootView, id);
      if (issuer == null) {
        break missingId;
      }

      id = R.id.locationLayout;
      LinearLayout locationLayout = ViewBindings.findChildViewById(rootView, id);
      if (locationLayout == null) {
        break missingId;
      }

      id = R.id.message;
      TextView message = ViewBindings.findChildViewById(rootView, id);
      if (message == null) {
        break missingId;
      }

      id = R.id.pushApprove;
      Button pushApprove = ViewBindings.findChildViewById(rootView, id);
      if (pushApprove == null) {
        break missingId;
      }

      id = R.id.pushChallengeDeny;
      Button pushChallengeDeny = ViewBindings.findChildViewById(rootView, id);
      if (pushChallengeDeny == null) {
        break missingId;
      }

      id = R.id.pushDeny;
      Button pushDeny = ViewBindings.findChildViewById(rootView, id);
      if (pushDeny == null) {
        break missingId;
      }

      id = R.id.question;
      TextView question = ViewBindings.findChildViewById(rootView, id);
      if (question == null) {
        break missingId;
      }

      id = R.id.rejectChallengeButton;
      LinearLayout rejectChallengeButton = ViewBindings.findChildViewById(rootView, id);
      if (rejectChallengeButton == null) {
        break missingId;
      }

      return new ActivityPushNotificationBinding((LinearLayout) rootView, acceptButtons,
          accountName, challengeButtons, choice1, choice2, choice3, geoLocation, image, imageView,
          issuer, locationLayout, message, pushApprove, pushChallengeDeny, pushDeny, question,
          rejectChallengeButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
